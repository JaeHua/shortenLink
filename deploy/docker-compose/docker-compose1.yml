# deploy/docker-compose/docker-compose1.yml
version: "3.9"

networks:
  shortener:

volumes:
  esdata:
  grafana:
  prometheus:
  mysql:
  etcd-data:
  nginx-logs:

services:
  etcd:
    image: quay.io/coreos/etcd:v3.5.15
    command: ["etcd","--advertise-client-urls=http://0.0.0.0:2379","--listen-client-urls=http://0.0.0.0:2379","--data-dir=/etcd-data"]
    ports: ["2379:2379"]
    networks: [shortener]
    volumes: ["etcd-data:/etcd-data"]

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: url
    ports: ["3306:3306"]
    networks: [shortener]
    volumes:
      - mysql:/var/lib/mysql

  redis:
    image: redis:7.2
    ports: ["6379:6379"]
    networks: [shortener]

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.1
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports: ["9200:9200"]
    networks: [shortener]
    volumes: ["esdata:/usr/share/elasticsearch/data"]

  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.1
    environment: ["ELASTICSEARCH_HOSTS=http://elasticsearch:9200"]
    ports: ["5601:5601"]
    networks: [shortener]

  prometheus:
    image: prom/prometheus:v2.54.1
    volumes:
      - prometheus:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports: ["9090:9090"]
    networks: [shortener]

  grafana:
    image: grafana/grafana:11.1.4
    volumes:
      - grafana:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    ports: ["3000:3000"]
    networks: [shortener]

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.14.1
    user: root
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - nginx-logs:/var/log/nginx
      - ./../../cmd:/workspace/cmd:ro
    networks: [shortener]
    depends_on: [elasticsearch]

  nginx:
    image: nginx:1.27
    ports: ["80:80"]
    volumes:
      - ../nginx/conf.d:/etc/nginx/conf.d:ro
      - nginx-logs:/var/log/nginx
    networks: [shortener]
    depends_on: [show-api, convert-api]

  sequence-rpc:
    build: { context: ../.., dockerfile: ../docker/sequence-rpc.Dockerfile }
    environment:
      - TZ=Asia/Shanghai
    networks: [shortener]
    depends_on: [mysql, etcd]

  convert-rpc:
    build: { context: ../.., dockerfile: ../docker/convert-rpc.Dockerfile }
    environment: ["TZ=Asia/Shanghai"]
    networks: [shortener]
    depends_on: [mysql, redis, etcd, sequence-rpc]

  show-rpc:
    build: { context: ../.., dockerfile: ../docker/show-rpc.Dockerfile }
    environment: ["TZ=Asia/Shanghai"]
    networks: [shortener]
    depends_on: [mysql, redis, etcd]

  convert-api:
    build: { context: ../.., dockerfile: ../docker/convert-api.Dockerfile }
    environment: ["TZ=Asia/Shanghai"]
    networks: [shortener]
    depends_on: [convert-rpc, etcd]

  show-api:
    build: { context: ../.., dockerfile: ../docker/show-api.Dockerfile }
    environment: ["TZ=Asia/Shanghai"]
    networks: [shortener]
    depends_on: [show-rpc, etcd]