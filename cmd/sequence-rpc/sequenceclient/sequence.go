// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.0
// Source: sequence.proto

package sequenceclient

import (
	"context"

	"shortenLink/cmd/sequence-rpc/shortenLink/rpc/sequence"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Empty    = sequence.Empty
	NextResp = sequence.NextResp

	Sequence interface {
		Next(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*NextResp, error)
	}

	defaultSequence struct {
		cli zrpc.Client
	}
)

func NewSequence(cli zrpc.Client) Sequence {
	return &defaultSequence{
		cli: cli,
	}
}

func (m *defaultSequence) Next(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*NextResp, error) {
	client := sequence.NewSequenceClient(m.cli.Conn())
	return client.Next(ctx, in, opts...)
}
