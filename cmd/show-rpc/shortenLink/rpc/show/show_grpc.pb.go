// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.20.1
// source: rpc/show/show.proto

package show

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ShowClient is the client API for Show service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ShowClient interface {
	Show(ctx context.Context, in *ShowRequest, opts ...grpc.CallOption) (*ShowResponse, error)
}

type showClient struct {
	cc grpc.ClientConnInterface
}

func NewShowClient(cc grpc.ClientConnInterface) ShowClient {
	return &showClient{cc}
}

func (c *showClient) Show(ctx context.Context, in *ShowRequest, opts ...grpc.CallOption) (*ShowResponse, error) {
	out := new(ShowResponse)
	err := c.cc.Invoke(ctx, "/show.Show/Show", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ShowServer is the server API for Show service.
// All implementations must embed UnimplementedShowServer
// for forward compatibility
type ShowServer interface {
	Show(context.Context, *ShowRequest) (*ShowResponse, error)
	mustEmbedUnimplementedShowServer()
}

// UnimplementedShowServer must be embedded to have forward compatible implementations.
type UnimplementedShowServer struct {
}

func (UnimplementedShowServer) Show(context.Context, *ShowRequest) (*ShowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Show not implemented")
}
func (UnimplementedShowServer) mustEmbedUnimplementedShowServer() {}

// UnsafeShowServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ShowServer will
// result in compilation errors.
type UnsafeShowServer interface {
	mustEmbedUnimplementedShowServer()
}

func RegisterShowServer(s grpc.ServiceRegistrar, srv ShowServer) {
	s.RegisterService(&Show_ServiceDesc, srv)
}

func _Show_Show_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShowServer).Show(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/show.Show/Show",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShowServer).Show(ctx, req.(*ShowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// Show_ServiceDesc is the grpc.ServiceDesc for Show service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Show_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "show.Show",
	HandlerType: (*ShowServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Show",
			Handler:    _Show_Show_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc/show/show.proto",
}
